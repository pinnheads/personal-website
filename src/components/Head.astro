---
import '../styles/global.css';

interface Props {
    title?: string | undefined;
    description?: string | undefined;
}

const { title = 'Utsav Deep - Personsal Portfolio', description = 'The personal site of Utsav Deep' } = Astro.props;
---

<meta charset='UTF-8' />
<meta name='description' property='og:description' content={description} />
<meta name='viewport' content='width=device-width' />
<meta name='generator' content={Astro.generator} />
<title>{title}</title>

<script is:inline>
    // This code is inlined in the head to make dark mode instant & blocking.
    const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    const isDark = getThemePreference() === 'dark';
    console.log(isDark);
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
        // Watch the document element and persist user preference when it changes.
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
    }
</script>
